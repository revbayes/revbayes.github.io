name: Check that website builds 

on:
  push:
    branches-ignore:
      - master
  pull_request:
    branches-ignore:
      - master

jobs:
  build:
    strategy:
      matrix:
        name: [ubuntu-gcc-12]

        include:

          - name: ubuntu-gcc-12
            os: ubuntu-latest
            compiler: gcc
            version: "12"
            mpi: false
            arch: linux64

    runs-on: ${{ matrix.os }}
    steps:

    - name: Install (Linux)
      if: runner.os == 'Linux' && matrix.name != 'windows'
      run: |
        sudo apt-get update
        sudo apt-get install -y ccache meson
        if [ "${{ matrix.compiler }}" = "gcc" ]; then
          sudo apt-get install -y g++-${{ matrix.version }}
          echo "C_COMPILER=gcc-${{ matrix.version }}" >> $GITHUB_ENV
          echo "CXX_COMPILER=g++-${{ matrix.version }}" >> $GITHUB_ENV

          echo "CC=ccache gcc-${{ matrix.version }}" >> $GITHUB_ENV
          echo "CXX=ccache g++-${{ matrix.version }}" >> $GITHUB_ENV
        else
          sudo apt-get install -y clang-${{ matrix.version }}
          echo "C_COMPILER=clang-${{ matrix.version }}" >> $GITHUB_ENV
          echo "CXX_COMPILER=clang++-${{ matrix.version }}" >> $GITHUB_ENV

          echo "CC=ccache clang-${{ matrix.version }}" >> $GITHUB_ENV
          echo "CXX=ccache clang++-${{ matrix.version }}" >> $GITHUB_ENV
        fi

    # Caches for different branches are isolated, so we don't need to put the branch name into the key.
    # The total size for all caches in a repository is 5Gb.

    - name: Install Ruby (Linux)
      if: runner.os == 'Linux' && matrix.name != 'windows'
      shell: bash
      run: |
        sudo apt-get install -y rubygems
        echo "/home/runner/.local/share/gem/ruby/3.2.0/bin" >> "$GITHUB_PATH"
        
    - name: Install Jekyll (Linux)
      if: runner.os == 'Linux' && matrix.name != 'windows'
      shell: bash
      run: |
        ls
        gem install jekyll bundler --user-install
        bundle install

    - name: Check that website builds (Linux)
      if: runner.os == 'Linux' && matrix.name != 'windows'
      run: |
        # if the _site directory is missing, create it.
        # (we assume later that it exists).
        if [ ! -d "_site" ] ; then
          echo "No _site directory, cloning the master branch into it."
          git clone git@github.com:revbayes/revbayes.github.io.git _site
          echo "Done."
        fi

        if [ ! -e "_site/.git" ] ; then
          echo "Error: The _site/ directory should be a separate git repo, but it is not!  Please remove it."
          exit 1
        fi

        # make sure there are no changes to commit
        if ! git diff-index --quiet HEAD --
        then
          echo "Error: Uncommitted source changes. Please commit or stash before updating master."
          exit 1
        fi
  
        msg=`git log -1 --pretty=%B`
  
        echo "Pulling updates to the source"
        git pull --quiet origin source
        echo
  
        # fetch master
        echo "Pulling master"
        (
          cd _site
          git checkout --quiet maste
          git fetch --quiet origin
          git reset --quiet --hard origin/master
    
          # update the documentation?
          if [ "$1" = "help" ]
          then
            git update-index --no-assume-unchanged documentation/index.html
            git ls-files --deleted -z documentation | git update-index --no-assume-unchanged -z --stdin
            git ls-files -z documentation | git update-index --no-assume-unchanged -z --stdin
          else
            git update-index --assume-unchanged documentation/index.html
            git ls-files -z documentation | git update-index --assume-unchanged -z --stdin
            git ls-files --deleted -z documentation | git update-index --assume-unchanged -z --stdin
          fi
        )
        echo
  
        # build the site
        echo "Running jekyll to build the static site."
        if ! bundle exec jekyll build; then
          echo "Jekyll build failed. Master not updated."
          exit 1
        fi
        echo

