########################################################
#
# RevBayes Example: Molecular dating
#
# This file: Runs the full MCMC for exercise 5
#
# authors: Rachel C. M. Warnock, Sebastian Hoehna
#
########################################################

#####################################################################
#
# Exercise 5: Estimating speciation times using total evidence dating
#
#####################################################################

#######################
# Reading in the Data #
#######################

# Create the full list of taxa (including all fossils and extant species) #
taxa <- readTaxonData("data/bears_taxa.tsv")

# Import the molecular sequences #
# this file contains only the taxa for which sequence data are available #
cytb <- readDiscreteCharacterData("data/bears_cytb.nex")

# Import the morphological character matrix #
# this file contains only the taxa for which morphological characters are available #
morpho <- readDiscreteCharacterData("data/bears_morphology.nex")

# Add the missing taxa to each data partition #
cytb.addMissingTaxa( taxa )
morpho.addMissingTaxa( taxa )


## helpers
n_taxa <- cytb.size()
#taxa <- cytb.taxa()


# Create some vector for the moves and monitors of this analysis
moves    = VectorMoves()
monitors = VectorMonitors()

# Load the model files

source("scripts/tree_TEFBD.Rev") # FBD tree prior

source("scripts/clock_relaxed_lognormal.Rev") # Molecular clock model

source("scripts/sub_GTRG.Rev") # Molecular substitution model (GTR+G)

#source("scripts/clock_morpho.Rev") # Morphological clock model

#source("scripts/sub_Mk.Rev") # Morphological substitution model (Mk+G)

########
# MCMC #
########

# initialize the model object #
mymodel = model(sf)

# Create a vector of monitors #
# 1. for the full model #
monitors.append( mnModel(filename="output/bears_TEFBD.log", printgen=10) )

# 2. the tree #
monitors.append( mnFile(filename="output/bears_TEFBD.trees", printgen=10, pruned_tree) )

# 3. and a few select parameters to be printed to the screen #
monitors.append( mnScreen(printgen=10, extant_mrca, num_samp_anc, diversification) )

# Initialize the MCMC object #
mymcmc = mcmc(mymodel, monitors, moves, nruns=2, combine="mixed")

# Run the MCMC #
mymcmc.run(generations=250, tuningInterval=200)

########################
# Summarizing the tree #
########################

# Read the trace file #
trace = readTreeTrace("output/bears_TEFBD.trees")

# Maximum clade credibility tree #
mccTree(trace, file="output/bears_TEFBD.mcc.tre" )


my_map_tree = mapTree(trace, file="output/bears_TEFBD.map.cca.tre", positiveBranchLengths=TRUE, mean=FALSE, conditionalAges=TRUE )
my_map_tree = mapTree(trace, file="output/bears_TEFBD.map.pos.tre", positiveBranchLengths=TRUE, mean=FALSE, conditionalAges=FALSE )
my_map_tree = mapTree(trace, file="output/bears_TEFBD.map.tre", positiveBranchLengths=FALSE, mean=FALSE, conditionalAges=FALSE )
my_mcc_tree = mccTree(trace, file="output/bears_TEFBD.mcc.cca.tre", positiveBranchLengths=TRUE, mean=FALSE, conditionalAges=TRUE )
my_mcc_tree = mccTree(trace, file="output/bears_TEFBD.mcc.pos.tre", positiveBranchLengths=TRUE, mean=FALSE, conditionalAges=FALSE )
my_mcc_tree = mccTree(trace, file="output/bears_TEFBD.mcc.tre", positiveBranchLengths=FALSE, mean=FALSE, conditionalAges=FALSE )

# Quit RevBayes #
q()
