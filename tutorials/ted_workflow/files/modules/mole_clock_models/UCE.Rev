# the UCE clock model
# REQUIRED: mole_branch_rates (either one value, or one value per branch), mole_branch_rate_mean

# draw the log of the mean from a uniform distribution
mole_clock_rate_mean_log ~ dnUniform(-10, 1)
moves.append( mvSlide(mole_clock_rate_mean_log) )
mole_clock_rate_mean_log.setValue(-7)

# exponentiate to get the true mean
mole_clock_rate_mean := exp(mole_clock_rate_mean_log)

# the branch-specific rates
for(i in 1:nbranch) {

  # draw the rate
  mole_branch_rates[i] ~ dnExponential(1 / mole_clock_rate_mean)
  moves.append( mvScale(mole_branch_rates[i]) )

}

# the mean of the branch rate
mole_branch_rate_mean := mean(mole_branch_rates)

# add a joint move on the branch rates and standard deviation
moves.append( mvVectorScale(mole_branch_rates, mole_clock_rate_mean) )
