################################################################################
#
# RevBayes Example: Bayesian inference of rates of evolution under a
#                   constant-rate Brownian-motion model
#
#
# authors: Michael R. May and Sebastian Höhna
#
################################################################################

#######################
# Reading in the Data #
#######################

### Select the trait to analyze
# Datasets: Female Mass, Tail Length – Body Length Residuals, Body Length – Mass Residuals, Maximum Age, Sexual Dimorphism, Geographic Range Size, Latitudinal Midpoint, Distance to Continental Centroid, Population Density, Home Range Size, Group Size, Gestation Duration, Litter size
trait <- 1

### Read in the trees
T <- readTrees("data/primates_tree.nex")[1]

### Read in the character data
data <- readContinuousCharacterData("data/primates_cont_traits.nex")
data.excludeAll()
data.includeCharacter( trait )

# Create some vector for the moves and monitors of this analysis
moves    = VectorMoves()
monitors = VectorMonitors()

##########################
# Specify the tree model #
##########################

tree <- T

##########################
# Specify the rate model #
##########################

sigma2 ~ dnLoguniform(1e-5, 1e-1)
moves.append( mvScale(sigma2, weight=1.0) )


##########################
# Specify the BM process #
##########################

#X ~ dnPhyloBrownianREML(tree, branchRates=sqrt(sigma2) )
#X.clamp(data)

numNodes = tree.nnodes()
numTips = tree.ntips()

# transform sigma2
sigma := sqrt(sigma2)

# prior on root value
root_state ~ dnUniform(-100,100)
moves.append( mvSlide(root_state,delta=10,tune=true,weight=2) )
X[numNodes] := root_state

# univariate Brownian process along the tree # parameterized by sigma
for (i in (numNodes-1):(numTips+1) ) {
  X[i] ~ dnNormal( X[tree.parent(i)], sd=sigma*sqrt(tree.branchLength(i)) )
  # moves on the Brownian process
  moves.append( mvSlide( X[i], delta=10, tune=true ,weight=2) )
}

for (i in numTips:1 ) {
  X[i] ~ dnNormal( X[tree.parent(i)], sd=sigma*sqrt(tree.branchLength(i)) )
  # condition Brownian model on quantitative trait data (second column of the dataset)
  X[i].clamp(data.getTaxon(tree.nodeName(i))[1])
}



#############
# The Model #
#############

mymodel = model(sigma2)

### set up the monitors that will output parameter values to file and screen
monitors.append( mnModel(filename="output/simple_BM_DA.log", printgen=10) )
monitors.append( mnExtNewick(filename="output/simple_BM_DA_ext.trees", isNodeParameter=TRUE, printgen=10, separator = TAB, tree=tree, X) )
monitors.append( mnScreen(printgen=1000, sigma2) )





################
# The Analysis #
################

### workspace mcmc ###
mymcmc = mcmc(mymodel, monitors, moves, nruns=2, combine="mixed")


### run the MCMC ###
mymcmc.burnin(generations=5000, tuningInterval=100)
mymcmc.run(generations=50000, tuningInterval=100)

treetrace = readTreeTrace("output/simple_BM_DA_ext.trees", treetype="clock")
map_tree = mapTree(treetrace,"output/simple_BM_DA_ext_MAP.tree")

## quit ##
q()
